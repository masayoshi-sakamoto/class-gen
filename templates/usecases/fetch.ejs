import { IApp } from '@/types/nuxt'
import { errors } from '@/utils/error'
import OptionsEntity from '@/entities/Options'

export default class Fetch<%= names %>UseCase implements BaseUseCase {
  app: IApp
  constructor(app: IApp) {
    this.app = app
  }

  async execute(entity?: OptionsEntity) {
    const { state, <%= name.toLowerCase() %>, <%= appName.toLowerCase() %>Gateway, logService } = this.app
    try {
      const { props, options } = await <%= appName.toLowerCase() %>Gateway.<%= name %>.Get<%= names %>(entity)
      <%= name.toLowerCase() %>.save([])
      <%= name.toLowerCase() %>.save(props, options)
      return true
    } catch (error) {
      return await errors(error, this.app, logService)
    }
  }
}
