import { IApp } from '@/types/nuxt'
import <%= name %>Entity from '@/entities/<%= name %>'
import { errors } from '@/utils/error'

export default class Update<%= names %>UseCase implements BaseUseCase {
  app: IApp
  constructor(app: IApp) {
    this.app = app
  }

  async execute(entities: <%= name %>Entity[]) {
    const { <%= name.toLowerCase() %>, <%= appName.toLowerCase() %>Gateway, logService } = this.app
    try {
      const exec = entities.map((entity) => <%= appName.toLowerCase() %>Gateway.<%= name %>.Put<%= name %>(entity))
      await Promise.all(exec).then((response) => {
        response.forEach((prop) => {
          if (prop) <%= name.toLowerCase() %>.save(prop)
        })
      })
      return true
    } catch (error) {
      return await errors(error, this.app, logService)
    }
  }
}
