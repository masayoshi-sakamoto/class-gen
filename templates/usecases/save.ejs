import { IApp } from '@/types/nuxt'
import <%= name %>Entity from '@/entities/<%= name %>'
import { errors } from '@/utils/error'

export default class Save<%= name %>UseCase implements BaseUseCase {
  app: IApp
  constructor(app: IApp) {
    this.app = app
  }

  async execute(entity: <%= name %>Entity) {
    const { state, <%= name.toLowerCase() %>, <%= appName.toLowerCase() %>Gateway, logService } = this.app
    try {
      state.loading = true
      const res = entity.id ? await <%= appName.toLowerCase() %>Gateway.<%= name %>.Put<%= name %>(entity) : await <%= appName.toLowerCase() %>Gateway.<%= name %>.Post<%= name %>(entity)
      state.loading = false
      if (res) {
        <%= name.toLowerCase() %>.save(res)
        return true
      }
      return false
    } catch (error) {
      state.loading = false
      return await errors(error, this.app, logService)
    }
  }
}
